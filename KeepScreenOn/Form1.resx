<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>286, 17</value>
  </data>
  <data name="contextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>129, 17</value>
  </data>
  <data name="notifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACrFAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAFHJJ
        REFUeJztnWmXVNUVhvk7+RH5E1GcQnCKjSZGiSMZ1GQlRo2JwRiDaOLEjI1MgiAg0m2DyCgiiNAg8zy2
        gFD33p3at6hYNFXdVbXPvN9nreeb0lW37nnPfM6YMYFDRFMb3EEAhE0fNbyzvstPdDQ8PABSAoHQjOpD
        GUco8EAf/M7/2Hf58wahSQ8AU3YZfJdHZxBqewBakW4QEAo+AO2SThBQrY8PAOiceMcIqFbw0ccHQAaP
        EcQVBITmPgCmCb9bQKj1AbBJuK0BQl8fAFeEFQKEwg+Aa8IIAUKTHwBf9KHwA6AbPyFAKPwAhILbECAU
        fgBCw00IUIBz/FPW5aU/eacCoXXr71uA9Ngu/EGM9q8ZLMof4KEFmfeXAer298uy8l386ljhu1jUsTM7
        QAEUfi74KPQwVDkMAgkC8yHg65vUa3vfPy6Enei7VWC68Dsf9ENtD1PQY6vAzKAgeRj0Q40PU/OjXV4G
        DWWDguS4349aH6asp9ZA9+MB5LDp7/vHgdClDumuK0COan+u9X3/GBD60GFroPNWgItPhcIPtesqBDot
        /NYH/jDQB2FNR6sK2x8QtP1JMNAH4fXyAKFtgqj9UfghbK6DEBi9FWDzr6PwQziytkPAW+2PPj+E7Wl5
        0VDrVgBZmvfHaD+EnWlxdqD5ugCyNO+Pwg9hd1oMgRvXBZCl5j/6/RB2p8XxgBu7ATb+iu8HCGEK2sB6
        AKDpD6EZbXQFrDf/0fSH0IyWugI9jQFgdPQfU34QmtXCcuE+K81/NP0htKPproCV6T80/SG0o+mugPH+
        P2p/CO1quBXQYzQA0PeH0K6GlwmbDQDfDwdCDRqkx9gAIJr/ELrRZDfAWABg8A9CN5ocDDQSAKj9IXSr
        qVaAkQDA4B+EbjU1GGgkAND8h9CtproB4gBA8x9CP5roBogDAM1/CP1oohsgDgA0/yH0YxAB4PshQKhZ
        BACEikUAQKhYBACEikUAQKhYBACEikUAQKhYBACEikUAQKhYBACEikUACBw3s0KTlmb04icZvbkhpxXf
        5LTxYEFfHi1o18mC9p0p6PD5gk58R3TuMtHFq0RXR1l9mRe1/+70RSr/3z2nCtp0qKBVu3Oavz2ndzfm
        5d+buDCjW6b5fwYwbqWoC4B75lbKgs0FOrd2+Wp7FNW/f/ZyLSi+PlFQ/76CZm/N6dlVGY2f7f9ZwfCV
        oi4AfrXA2o2rxrlUbUkcqYbD+gMFzf0Cuy7hjUpRFwCPLo4nABrh7onvZwfDU4q6APjN0jgDYNISbLuG
        NypFXQA8vTy+ADgxRHTTu/6fHQxPKeoC4M8r4wuAdzai+Q+bK0VdALywOr4AmNCL5j9srhR1AfBSX1wB
        sOEgDl2FrZWiLgBeHTB6uaJ1/rIKtT9srRR1AfD6Z/EEAK8DuH2G/2cGw1WKugB4a0M8ATD/Swz+2fS5
        jzO6e47/zyFRiroAmLE5ngDAkevmvXN2heZ8kdPxoYIWfRV/wEpRFwC8pDYGth9Nb/Bv7LQK/X1NRk8t
        c7vX4bHFGc3aktO26jO9em0M+MwlKjeD+X4mUqWoCwDekRcDz3+cVu3/8MKMDp27fvcVF0K+3oo3QXHL
        bHJ/Vi7U4v0a42Z1/jcm9Fbo+dUZzdma08C3Be09XZTjKM1IZXBViroAWLIz/AA4f5no1un+n5Upe7fl
        dKWL2ddKXtuGzSshecfkt2cK+uZkQTuqobH1SG2b9a4TRdmc7+Tf/3RfOq0rKeoCwNS1yjaZvin+vin7
        i/ez8jyEkLhSLTP3zvX/bEwpRV0AfLwn/ABIYeXfKwNZy+a3T15L7DJbKeoCoG8w7ADgvf++n5HEn79X
        oS2Hw6r16/BJTzcntqlKiroA4MGhkPnDR/HW/v9em5fHoYUIjyfcP8//MzKtFHUBwDVsqBwfoihrKD5m
        jc9SDBleAer7OdlQiroA4JHjUHkjwpd05uY8yL5+I9sTbPrXlaIuAL44EmYAZNWPdWdEB4E+/kFG+8+G
        +Swb4SnVexIa9R+uFHUBwLVBiCzfFUftf8v0SrmEthL2WGoJhyqvAvT9zGwqRV0A8PHbIfJoBC/qvway
        8r6DWOCzH3w/M9tKURcAoS1MYXYcD3vq74klGQ2eDu+5jcT7SnZSSlEXAHwpSGiEui79thkVWvZ1TlkE
        zf1G+BSlsUpuXZKiLgAOngsrALhJHeIVYVPWZeVmndjgLt4dCezya1cp6gLg6AXxMzPKfz8Pq6nK15Id
        iGB0vxl8h2PsB3x0qhR1AcAvSSjw3YR3BfLCTlyUlUtlY2XoSpor/UZTiroACKlZG8J1X+Nn1TZIxTCt
        1wo+5OORxf7fLR9KURcAF74XPzNj8GIaX8+BB8n4dKRQ1+63C7ei+BAR3++VL6WoC4BQlq3ytJqvZ/Dq
        QEYnA+oKdUulWvPz8WK+3ymfSlEXAN2cTGODl9a4f3GfqdaUeyObz28FB7nPFlQoSlEXAEUA77/r8/75
        dOFQ9+h3A6/vf2iB/3cpBKWoCgDeERYC721zM/jHMwyfDMY9wDcc7rpoHO1vpRRVAcC1bgg8ON9u0/W2
        6RVasD2ny2F8XWPw7sOUzvMzoRRVAcDbbX3D25Ftfsc31ud0NqCpTlPwGoWfdXFUeOpKURUA973nfwTQ
        1rr/v66+8dz9VBjYV+COxBZKURUAfEy1T/iMe9Pr/vkMwd0B7nA0Bd/joGVjTzdKURUAExf6DQC+/cbU
        d+GDLmJeujsa/M2mJnaEtw2lqAoAnjf2CbdApN9hwrwKrdtflCvgUoWnSZ9SvLqvE6WoCoDffegvAKSX
        fXIfePGO7q7YiondJwtM83WgFFUBwP1lXzwnuOzzP+vzcvwgdRZuz5O6E9GFUlQFAI/A+4C3qnbzYvPn
        De0AExtwk//ZQE9FCl0pqgLgxU/8BMD8Ds+n46W7KQ/wNcJdI75OzPe7EatSVAXAy/1+AqDdTSvcz1+6
        M62luyMxa0se5HFoMSlFVQDw3XWu4SPIbmrjs01Zm9FZBf18htfzT1qKJr8JpagKAB5Mc82bo5z5x/P5
        PPKthZW7cyzpNagUVQHwzkb3AfDAvOY1HTf3l+2K78jtbuGBPl6u7PsdSE0pqgKA+5wu2dniwg8ei0hx
        w04reAPUfRjos6IUVQEwb5vbAJjcf32Nx6v4Qr2c1AZ8WCfvThyb6M28IShFVQDwpZau4GJ+V8Ntv29v
        SG9//kjw7Tw9vf5/89SVoioAuM/tCi4A/Dd5Tl/TIB8f14W+vjulqAoAPoffFe9uyql3W/pr9xvhvQoY
        4XerFFUBsHpQyZC7Y/ioLpzQ60cpqgKgf5+eprgLeEvy9E3YwONTKaoCgPfRAzP07S3oAWzb9a4UVQHA
        A3NABh8/9uQSNPdDUYqqAEjpcgzX8B2C//w0L+9W8P07wh+UoioAtinZYmuSrKhdZDIeo/tBKkVVAOw4
        jgDoBO7nT8BinqCVoioAdilakCNhD/r50ShFVQAMJnIzri14Fd/kfqzdj0kpqgKAF6yA5vCqxZ/O9P8b
        wc6UoioADp1HADRjxTd27yuE9pSiKgCODYmfV5Lwtl3cuhunUlQFwKmL4ueVLJ2eXAzDUIqqANBwuUa3
        8EnEuJEnPqWoCgC+oAO0hs9L8P0bwc6UoioANJ3I0w28u++X8/3/TrB9pagKAC0XbkhYfwAzAjEpRVUA
        YBKwPbAKMB6lqAmAsdPQ/m+XXSeKtm4zgv6VoiYAxs1EAHQCX6Tq+zeDoytFTQDcPVfR6ZwG4DUTt+Li
        zuCVoiYAJvQiADpl6meYFgxdKWoC4MH5CIBO4WlTXOkVtlLUBMAjixAA3bD5MKYFQ1aKmgDgqS3QHa8O
        oCsQqlLUBMBTyxEA3cK3Gz2IFYJBKkVNAPxpBQJAwr4zBS4ACVApagLg+dUIAClLd6IrEJpS1ATAS30I
        ABO8gJt/g1KKmgB4ZSDcnUBbDhXRbFXmqUGeUvX9e8KaUtQEwGvrwgyAmVvycp/CtE1hfr5mHL1AOEA0
        EKWoCYA3Pw+rgF26SvTnlT/UpHwU96Hzvj9V+3y2H+sDQlCKmgCYHlANe3yo+cEbv/swi2rL8ozNGBT0
        rRQ1ATBnaxgBsKna3x8/u/XnXPFNGJ+zXf7Rh/EAn0pREwDzt/svWEu/zumWUXbY3VHtW5+55PuTtg+f
        svTbDxECvpSiJgA+2Ok3APhq7XY/68v9cU1ZfneF6KEFCAEfSlETAMt3+QkAXkbLy5A7/byx3WTM9wpi
        ubB7pagJgFW73QcAz5k/tri7z8vbcHmmICa46/KL9/3/1pqUoiYA1gy6DQAuvI92WfjrxtYVYE5fJHoA
        F4w4U4qaABjY565JXamW28c/MNMn7t/rf/CyU8oQQEvAiVLUBAAvXHHF0130+Vt5+4wKHY5ogVCdU2gJ
        OFGKmgDYeNBNAEzuNz8a/vCCjL6P8FBjdAfsK0VNAGw9bD8AeLWhrc8/OcLxAIYvZH10MaYIbSlFTQB8
        edRuAPRus78sdonntQzdwrMhf1yBELChFDUBsNPivPrK3Tnd9K7973Bz9W9sPhTX+oA6Wc6LoRACppWi
        JgB2n7RTcAZPF3Sbw6OyeKnwwXNxhgDDS7J9vwspKUVNAOw7bafQfHvG/bbY++dVojlApBk8IHvHDP/v
        RApKURMAB87aCYCi+s/e7uFlfmZ5Rlm8DYGyFTMBMwRipagJgCPn7ZWWxzyNcv9tTUZ5xCHAm4ie+xjj
        AhKlqAmAE0PiZ9WSly3M/bcr/+2IM6D87Dy7MdbBIGqKSlETALwoxRar9/g9Huu1dXGuEWhkz6kC9xB2
        oRQ1AcDbVW3BTdmbPddgb6yPPwSGvkeXoFOlqAmAi5ZHzSct8f/ivr0hzoVCw/nw69pJyb6fZwxKURMA
        VyyvpZ+1JYz57RS6A8xgtUtwP2YJRlWKmgDILFeOvPvtpgC+J/v3NXFPEdbhMxVwM/HISlERALxM1wVP
        BNANqPunlVl5HFkKfH6goJ/N8v9MQ1SKigDgpboueP/LsGqrJ6uBxANrKcCzOM98FE7AhqIUFQHA5/C7
        gGcDRjv227W/mp/RsQtOvr51eNXl4h0YIGxUiooAuHeuu7Zw43VfoTh+lv3t0C7hDVg4fLSmFBUB8MA8
        dwGw/kCYd+ZxrcnTa6nAZwxMXRdWl8uHUlQEwMML3QUAN1Mn9Pr/zq3kC0oq6eQAbTioe4BQiooA4M06
        LpkZyJqAVvIRXSe/c/pIrHJK8QChFBUB8NulbgPgwvdEtzo8JKQbeWCUuyspoXGAUIqKAOC9866JZQHL
        v9fmdDWR9QLMXmUDhFJUBMCzK92/4dwK4OO7fH/3dpy4MKND55w/ImvwACEHm+/n6kIpKgLgxU/8VHHT
        LB4TblpeLLXM0wWqtuDLYH4aSQh3qxQVAfCPPj8BwJd5/DyyPe68HTeV1YPM8SEqV0T6fq62lKIiALg5
        6Iv+vWGuCxjJu+dUaJ3Dq9RswxvBYmqNdaIUFQHwxnq/TVuTdwW69IXVWXmzTyrwnQqprRmQoiIA3vF8
        UAavxQ99WrCV46oFZsH2POrDRxs5eiGt+wqlqAiAmZv9D27N3hp3E/SRRVl5bl8K8PFwv14UZ6tsuFJU
        BADf2+cbrkF5SbLvZyGRzz18/bM8ypuKh8NHxD3+Qdy/BytFRQAs3O4/ABiuQX0fHmrCnt5KeUhH7PD2
        7SciDwEpKgIgpF1wb22IuyvQKJ86dMzifQsu4GPHYp4mlKIiAD4KaIEL78SbGHlXoFE+AGXK2jzquwo5
        BEI6zq0TpagIgNV7wgkAhmvN1Kaj+PvM/SLercYcAo9EODAoRUUA9O0Nr7+69Uga4wHD5Qs/+wN83u3A
        +zceWhBXCEhREQBrvw3zheTBSd/PxpaTlma0/6zvJ9w5sYWAFBUBEPKI9V9WxfOydSq3cF75NL7VhGcu
        UTRXl0tREQCbDoUbANz3TGE+eiRvn1Fbjn35qu+n3T77z8axk1CKigCAMFURABAqFgEAoWIRABAqFgEA
        oWIRABAqFgEAoWIRABAqFgEAoWK9B8AU3NAKoRdNbHNHAEAYqUEEwFfH4jv3HsIUPHhOvsdFHADM75el
        vZkFwtCc3G/mtisjAYBuAIRuNXXMnZEAQDcAQreaaP4zRgKAQTcAQjeaav4zxgIArQAI3Wiq9mc4AKaa
        +sd8PxgINWiQHqMBgMFACO1q+I4LswGAbgCEdjXZ/CcOAMbkv4jBQAjtaHLwjxlTx+Q/ilYAhHY0XPtf
        FwB9Jv9h7qf4flgQpqSF+y2nNQaAsXGAOugKQGhG003/a/SMacT0v46uAIRmNN30Z8YMx/hfIKwLgNCE
        NmgWAMa7AQy6AhB2p6WmP9NzQwDYagWgKwBhd9po+jNNC7+N2YA6CAEIO9NW4afG0X9X3QAGy4QhbE+L
        hZ9p3vy32Q2og/EACEfWYr+/ZMTCb7sVwCAEIGyu7cJPo9X+LloBDEIAwut1UPhHr/1dtQIYLBeGsKaF
        Zb7NaK/2d9UKYDA7ALVrecDv/3RU+K8FwI9dfDAOAXQJoDa5ye+q8Ff5UccBcC0ErKwLaIbvHwRClzqk
        9bx/KK2AOmgNwJR1XOvX6a72bwgB6wOCw8GiIZiajgb6htPZwN8IIeCsK1AHrQGYgp5qfab7pn+LEPAC
        BwGmDGFs8jvrqeCXGC381wLA6XhAM9AqgCHrsbYfjqzfH3II1OGERRhA33Kh99S/b4Wdwt8QAs4HBUeD
        fwB0E6Ar6+9bgNgt/A0h4HxQEAAwImYH/RACAESD28KPEAAgGPwUfoQAAN7xW/jrUECzAwAowc2AX7sQ
        QgAAV4RV+BshdAkAsEUYTf7RqH7QHt9PCoDEMLOxxxVU6xKgNQCAjGkUcpN/NAhjAwB0S7wFfziEbgEA
        7RJXc78TCEEAQCvSLfjDoVoQYIwAaIf7+HoK/nCoNkaAMACaKAs9pdTHN8W1B4NuAkiN8r32Xb6ig34I
        BLQSQAzUa/coCvz/AJ9QVazDJ3EzAAAAAElFTkSuQmCC
</value>
  </data>
</root>